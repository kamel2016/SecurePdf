@page
@model SecureDocumentPdf.Pages.IndexModel
@{
    ViewData["Title"] = "Sécurisation Multi-Formats v3.0";
}

<div class="row justify-content-center mt-4">
    <div class="col-lg-11">
        <!-- En-tête -->
        <div class="text-center mb-5">
            <h1 class="display-5 text-primary mb-3 fw-bold">
                <i class="fas fa-shield-alt me-3"></i> 
                @* MTENDA - TCHAD *@  
            </h1>
            <div>
                @* <img src="@(Url.Content("~/Images/barre_tchad-Photoroom.png"))" alt="Image" /> *@
            <p class="lead text-muted fs-5">
                Convertissez et sécurisez vos documents (Word, Excel, PowerPoint, Images, PDF...) avec protection maximale
            </p>
            @* <div class="badge bg-danger fs-6 px-4 py-2">
            <i class="fas fa-lock me-2"></i>Chiffrement AES 128-bit + Blockchain + Signature Biométrique
            </div> *@
        </div>

        <!-- Carte principale -->
        <div class="card shadow-lg border-0 rounded-4">
            <div class="card-header bg-gradient-primary text-white py-4">
                <h4 class="card-title mb-0 fs-3">
                    <i class="fas fa-upload me-2"></i>
                    Télécharger et Sécuriser votre Document
                </h4>
            </div>
            <div class="card-body p-5">

                <!-- Formulaire -->
                <form method="post" enctype="multipart/form-data" id="uploadForm" novalidate>
                    @Html.AntiForgeryToken()

                    <!-- Informations protection -->
                    @*  <div class="alert alert-info border-0 shadow-sm rounded-3 mb-4">
                    <h6 class="alert-heading fw-bold fs-5 mb-3">
                    <i class="fas fa-shield-alt me-2"></i>20 Protections Ultra-Sécurisées appliquées :
                    </h6>
                    <div class="row g-2">
                    <div class="col-md-3 col-6">
                    <div class="d-flex align-items-center">
                    <i class="fas fa-check-circle text-success me-2"></i>
                    <small>Conversion PDF</small>
                    </div>
                    </div>
                    <div class="col-md-3 col-6">
                    <div class="d-flex align-items-center">
                    <i class="fas fa-check-circle text-success me-2"></i>
                    <small>Hash SHA-256</small>
                    </div>
                    </div>
                    <div class="col-md-3 col-6">
                    <div class="d-flex align-items-center">
                    <i class="fas fa-check-circle text-success me-2"></i>
                    <small>Signature PAdES</small>
                    </div>
                    </div>
                    <div class="col-md-3 col-6">
                    <div class="d-flex align-items-center">
                    <i class="fas fa-check-circle text-success me-2"></i>
                    <small>Horodatage RFC3161</small>
                    </div>
                    </div>
                    <div class="col-md-3 col-6">
                    <div class="d-flex align-items-center">
                    <i class="fas fa-check-circle text-success me-2"></i>
                    <small>Watermark invisible</small>
                    </div>
                    </div>
                    <div class="col-md-3 col-6">
                    <div class="d-flex align-items-center">
                    <i class="fas fa-check-circle text-success me-2"></i>
                    <small>Watermark visible</small>
                    </div>
                    </div>
                    <div class="col-md-3 col-6">
                    <div class="d-flex align-items-center">
                    <i class="fas fa-lock text-danger me-2"></i>
                    <small>Chiffrement AES 128-bit</small>
                    </div>
                    </div>
                    <div class="col-md-3 col-6">
                    <div class="d-flex align-items-center">
                    <i class="fas fa-lock text-danger me-2"></i>
                    <small>Protection mot de passe</small>
                    </div>
                    </div>
                    <div class="col-md-3 col-6">
                    <div class="d-flex align-items-center">
                    <i class="fas fa-check-circle text-success me-2"></i>
                    <small>Signature biométrique</small>
                    </div>
                    </div>
                    <div class="col-md-3 col-6">
                    <div class="d-flex align-items-center">
                    <i class="fas fa-check-circle text-success me-2"></i>
                    <small>Chaîne blockchain</small>
                    </div>
                    </div>
                    <div class="col-md-3 col-6">
                    <div class="d-flex align-items-center">
                    <i class="fas fa-check-circle text-success me-2"></i>
                    <small>QR vérification</small>
                    </div>
                    </div>
                    <div class="col-md-3 col-6">
                    <div class="d-flex align-items-center">
                    <i class="fas fa-check-circle text-success me-2"></i>
                    <small>Géolocalisation</small>
                    </div>
                    </div>
                    <div class="col-md-3 col-6">
                    <div class="d-flex align-items-center">
                    <i class="fas fa-check-circle text-success me-2"></i>
                    <small>Hash par page</small>
                    </div>
                    </div>
                    <div class="col-md-3 col-6">
                    <div class="d-flex align-items-center">
                    <i class="fas fa-check-circle text-success me-2"></i>
                    <small>Journal d'audit</small>
                    </div>
                    </div>
                    <div class="col-md-3 col-6">
                    <div class="d-flex align-items-center">
                    <i class="fas fa-check-circle text-success me-2"></i>
                    <small>Anti-screenshot</small>
                    </div>
                    </div>
                    <div class="col-md-3 col-6">
                    <div class="d-flex align-items-center">
                    <i class="fas fa-check-circle text-success me-2"></i>
                    <small>Nettoyage métadonnées</small>
                    </div>
                    </div>
                    <div class="col-md-3 col-6">
                    <div class="d-flex align-items-center">
                    <i class="fas fa-check-circle text-success me-2"></i>
                    <small>Filigrane dynamique</small>
                    </div>
                    </div>
                    <div class="col-md-3 col-6">
                    <div class="d-flex align-items-center">
                    <i class="fas fa-check-circle text-success me-2"></i>
                    <small>Restriction IP</small>
                    </div>
                    </div>
                    <div class="col-md-3 col-6">
                    <div class="d-flex align-items-center">
                    <i class="fas fa-check-circle text-success me-2"></i>
                    <small>Expiration programmée</small>
                    </div>
                    </div>
                    <div class="col-md-3 col-6">
                    <div class="d-flex align-items-center">
                    <i class="fas fa-check-circle text-success me-2"></i>
                    <small>Multi-signature</small>
                    </div>
                    </div>
                    </div>
                    </div> *@

                    <!-- Nom utilisateur -->
                    <div class="mb-4">
                        <label asp-for="UserName" class="form-label fw-bold fs-5">
                            <i class="fas fa-user me-2 text-primary"></i>Nom d'utilisateur
                        </label>
                        <input asp-for="UserName" class="form-control form-control-lg shadow-sm"
                               placeholder="Votre nom ou identifiant" />
                        <span asp-validation-for="UserName" class="text-danger d-block mt-2"></span>
                    </div>

                    <!-- Zone de drag & drop -->
                    <div class="mb-4">
                        <label asp-for="UploadedFile" class="form-label fw-bold fs-5 mb-3">
                            <i class="fas fa-file-upload me-2 text-primary"></i>Document à sécuriser
                        </label>

                        <div class="file-drop-area-large" id="fileDropArea">
                            <div class="file-drop-content">
                                <div class="file-drop-icon-large mb-4">
                                    <i class="fas fa-cloud-upload-alt fa-6x text-primary"></i>
                                </div>
                                <div class="file-drop-text-large">
                                    <h3 class="fw-bold text-dark mb-3">Glissez-déposez votre document ici</h3>
                                    <p class="fs-5 text-muted mb-4">Tous formats supportés : PDF, Word, Excel, PowerPoint, Images...</p>
                                    <button type="button" class="btn btn-primary btn-lg px-5 py-3 shadow" onclick="document.getElementById('fileInput').click()">
                                        <i class="fas fa-folder-open me-2"></i>
                                        Parcourir les fichiers
                                    </button>
                                </div>
                                <input asp-for="UploadedFile" type="file" class="file-input"
                                       id="fileInput"
                                       accept=".pdf,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.jpg,.jpeg,.png,.bmp,.gif,.tiff,.svg,.txt,.csv,.json,.xml,.md,.markdown,.html,.htm,.rtf,.eml,.odt,.ods,.odp"
                                       style="display: none;" />
                            </div>

                            <!-- Info fichier sélectionné -->
                            <div class="file-selected-info-large" id="fileInfoDisplay" style="display: none;">
                                <div class="d-flex align-items-center justify-content-between">
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-file fa-3x text-primary me-4" id="fileIcon"></i>
                                        <div>
                                            <h5 class="mb-1 fw-bold" id="fileName">Document</h5>
                                            <p class="mb-0 text-muted">
                                                <span id="fileSize">0 MB</span> •
                                                <span id="fileType" class="badge bg-info">Type</span>
                                            </p>
                                        </div>
                                    </div>
                                    <button type="button" class="btn btn-outline-danger btn-sm" onclick="resetFileSelection()">
                                        <i class="fas fa-times me-1"></i> Supprimer
                                    </button>
                                </div>
                            </div>
                        </div>

                        <span asp-validation-for="UploadedFile" class="text-danger d-block mt-2"></span>
                        <div class="form-text mt-3">
                            <i class="fas fa-info-circle me-1"></i>
                            <strong>Formats acceptés :</strong>
                            PDF, Word (.doc, .docx), Excel (.xls, .xlsx), PowerPoint (.ppt, .pptx),
                            Images (.jpg, .png, .svg...), Texte (.txt, .csv, .json, .xml),
                            Markdown (.md), HTML, RTF, Email (.eml), OpenDocument (.odt, .ods, .odp)
                            <br>
                            <strong>Taille maximale :</strong> 100 MB
                        </div>
                    </div>

                    <!-- Options avancées -->
                    <div class="card mb-4 border-primary">
                        <div class="card-header bg-light">
                            <h6 class="mb-0">
                                <i class="fas fa-cog me-2"></i>Options de sécurité avancées
                            </h6>
                        </div>
                        <div class="card-body">
                            <div class="row g-3">
                                <!-- Expiration -->
                                <div class="col-md-6">
                                    <label asp-for="ExpirationDays" class="form-label">
                                        <i class="fas fa-calendar-times me-2"></i>Expiration automatique
                                    </label>
                                    <input asp-for="ExpirationDays" type="number" class="form-control"
                                           min="0" max="3650" />
                                    <small class="text-muted">0 = pas d'expiration</small>
                                </div>

                                <!-- Sécurité maximale -->
                                <div class="col-md-6">
                                    <label class="form-label d-block">
                                        <i class="fas fa-shield-alt me-2"></i>Niveau de protection
                                    </label>
                                    <div class="form-check form-switch">
                                        <input asp-for="EnableMaximumSecurity" class="form-check-input"
                                               type="checkbox" checked id="enableMaxSecurity" />
                                        <label class="form-check-label" for="enableMaxSecurity">
                                            Activer protection maximale (recommandé)
                                        </label>
                                    </div>
                                </div>

                                <!-- Multi-signature -->
                                <div class="col-md-6">
                                    <div class="form-check form-switch">
                                        <input asp-for="RequireMultipleSignatures" class="form-check-input"
                                               type="checkbox" id="multiSigCheck" />
                                        <label class="form-check-label" for="multiSigCheck">
                                            Nécessite plusieurs signatures
                                        </label>
                                    </div>
                                </div>

                                <!-- Signataires -->
                                <div class="col-md-6" id="signersGroup" style="display: none;">
                                    <label asp-for="RequiredSigners" class="form-label">
                                        Signataires requis
                                    </label>
                                    <input asp-for="RequiredSigners" class="form-control"
                                           placeholder="Jean, Marie, Paul" />
                                    <small class="text-muted">Séparés par des virgules</small>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bouton de traitement -->
                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-primary btn-lg py-3 fs-4 shadow-lg" style="background-color:red !important" id="submitBtn">
                            <i class="fas fa-shield-alt me-2"></i>
                            Sécuriser mon Document
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Affichage des résultats -->
        @if (Model.Result != null)
        {
            <div class="mt-4" id="resultArea">
                @if (Model.Result.Success)
                {
                    <!-- Succès -->
                    <div class="card border-success shadow-lg">
                        <div class="card-header bg-success text-white py-3">
                            <h5 class="card-title mb-0 fs-4">
                                <i class="fas fa-check-circle me-2"></i>
                                Document Ultra-Sécurisé avec Succès !
                            </h5>
                        </div>
                        <div class="card-body p-4">
                            <div class="alert alert-success mb-3">
                                <i class="fas fa-check me-2"></i>
                                @if (!string.IsNullOrEmpty(Model.DetectedFileType))
                                {
                                    <strong>@Model.DetectedFileType</strong> <span>converti en PDF et</span>
                                }
                                <strong>ultra-sécurisé avec protection maximale</strong>
                            </div>

                            <!-- Téléchargements -->
                            <div class="row g-3 mb-4">
                                <div class="col-md-6">
                                    <a href="@Model.Result.SecuredPdfPath" class="btn btn-success w-100 py-3" download>
                                        <i class="fas fa-download me-2"></i>
                                        Télécharger le PDF Sécurisé
                                    </a>
                                </div>
                                <div class="col-md-6">
                                    <a href="@Model.Result.ProofFilePath" class="btn btn-info w-100 py-3" download>
                                        <i class="fas fa-certificate me-2"></i>
                                        Télécharger le Certificat de Preuve
                                    </a>
                                </div>
                                @*  @if (!string.IsNullOrEmpty(Model.Result.QRCodePath))
                        {
                        <div class="col-md-6">
                        <a href="@Model.Result.QRCodePath" class="btn btn-warning w-100 py-3" download>
                        <i class="fas fa-qrcode me-2"></i>
                        QR Code Vérification
                        </a>
                        </div>
                        }
                        @if (!string.IsNullOrEmpty(Model.Result.AuditLogPath))
                        {
                        <div class="col-md-6">
                        <a href="@Model.Result.AuditLogPath" class="btn btn-secondary w-100 py-3" download>
                        <i class="fas fa-file-alt me-2"></i>
                        Télécharger le Journal d'Audit
                        </a>
                        </div>
                        } *@
                            </div>
                            <!-- Info protection -->
                            @* @if (Model.Result.IsPasswordProtected)
                    {
                    <div class="alert alert-danger mb-4">
                    <h6 class="alert-heading">
                    <i class="fas fa-lock me-2"></i>Protection Maximale Activée
                    </h6>
                    <p class="mb-2">@Html.Raw(Model.Result.ProtectionInfo.Replace("\n", "<br>"))</p>
                    <hr class="my-2">
                    <p class="mb-0 small">
                    <strong>⚠️ Important :</strong> Un fichier PASSWORD_*.json a été généré contenant le mot de passe propriétaire.
                    Conservez-le dans un endroit sûr pour pouvoir modifier le PDF ultérieurement.
                    </p>
                    </div>
                    }

                    <!-- Informations détaillées -->
                    <div class="p-4 bg-light rounded-3 mb-4">
                    <h6 class="text-success fw-bold mb-3">
                    <i class="fas fa-info-circle me-2"></i>Informations de Sécurité
                    </h6>
                    <div class="row g-3">
                    <div class="col-md-6">
                    <strong>Document ID :</strong><br>
                    <small class="text-monospace text-break">@Model.Result.DocumentId</small>
                    </div>
                    <div class="col-md-6">
                    <strong>Signature Biométrique :</strong><br>
                    <small class="text-monospace text-break">@Model.Result.BiometricSignature</small>
                    </div>
                    <div class="col-md-6">
                    <strong>Hash Original (SHA-256) :</strong><br>
                    <small class="text-monospace text-break">@Model.Result.OriginalHash</small>
                    </div>
                    <div class="col-md-6">
                    <strong>Hash Final (SHA-256) :</strong><br>
                    <small class="text-monospace text-break">@Model.Result.ProcessedHash</small>
                    </div>
                    <div class="col-md-4">
                    <strong>Traité le :</strong><br>
                    <small>@Model.Result.ProcessedAt.ToString("dd/MM/yyyy HH:mm:ss UTC")</small>
                    </div>
                    <div class="col-md-4">
                    <strong>Taille :</strong><br>
                    <small>@FormatFileSize(Model.Result.FileSizeBytes)</small>
                    </div>
                    <div class="col-md-4">
                    <strong>Durée de traitement :</strong><br>
                    <small>@Model.Result.ProcessingDurationSeconds.ToString("F2")s</small>
                    </div>
                    <div class="col-md-6">
                    <strong>Adresse IP :</strong><br>
                    <small>@Model.Result.IpAddress</small>
                    </div>
                    @if (Model.Result.ExpirationDate.HasValue)
                    {
                    <div class="col-md-6">
                    <strong>Date d'expiration :</strong><br>
                    <small>@Model.Result.ExpirationDate.Value.ToString("dd/MM/yyyy")</small>
                    </div>
                    }
                    <div class="col-12">
                    <div class="alert alert-danger mb-0">
                    <i class="fas fa-shield-alt me-2"></i>
                    <strong>Niveau de Sécurité : @Model.Result.SecurityLevel</strong>
                    </div>
                    </div>
                    </div>
                    </div>

                    <!-- Chaîne Blockchain -->
                    @if (Model.Result.HashChain != null && Model.Result.HashChain.Any())
                    {
                    <div class="mb-4">
                    <h6 class="text-success fw-bold mb-3">
                    <i class="fas fa-link me-2"></i>Chaîne de Hash Blockchain
                    </h6>
                    <div class="bg-dark p-3 rounded text-light" style="max-height: 200px; overflow-y: auto;">
                    <small class="text-monospace">
                    @foreach (var hash in Model.Result.HashChain)
                    {
                    <div>@hash</div>
                    }
                    </small>
                    </div>
                    </div>
                    }

                    <!-- Hash par page -->
                    @if (Model.Result.PageHashes != null && Model.Result.PageHashes.Any())
                    {
                    <div class="mb-4">
                    <h6 class="text-success fw-bold mb-3">
                    <i class="fas fa-list me-2"></i>Hash par Page (Détection de Modification)
                    </h6>
                    <div class="table-responsive">
                    <table class="table table-sm table-striped">
                    <thead class="table-dark">
                    <tr>
                    <th>Page</th>
                    <th>Hash SHA-256</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var pageHash in Model.Result.PageHashes)
                    {
                    <tr>
                    <td class="fw-bold">@pageHash.Key</td>
                    <td>
                    <small class="text-monospace">
                    @pageHash.Value.Substring(0, Math.Min(16, pageHash.Value.Length))...
                    </small>
                    </td>
                    </tr>
                    }
                    </tbody>
                    </table>
                    </div>
                    </div>
                    }

                    <!-- Étapes de traitement -->
                    @if (Model.Result.ProcessingSteps.Any())
                    {
                    <div class="mb-4">
                    <h6 class="text-success fw-bold mb-3">
                    <i class="fas fa-tasks me-2"></i>20 Étapes de Sécurisation Appliquées
                    </h6>
                    <div class="row g-2">
                    @foreach (var step in Model.Result.ProcessingSteps)
                    {
                    <div class="col-md-6">
                    <div class="d-flex align-items-start p-2 bg-light rounded">
                    <i class="fas fa-check-circle text-success me-2 mt-1"></i>
                    <small>@step</small>
                    </div>
                    </div>
                    }
                    </div>
                    </div>
                    } *@
                        </div>
                    </div>
                }
                else
                {
                    <!-- Erreur -->
                    <div class="card border-danger shadow-lg">
                        <div class="card-header bg-danger text-white py-3">
                            <h5 class="card-title mb-0 fs-4">
                                <i class="fas fa-exclamation-triangle me-2"></i>
                                Erreur de Traitement
                            </h5>
                        </div>
                        <div class="card-body p-4">
                            <div class="alert alert-danger mb-3">
                                <strong>Erreur :</strong> @Model.Result.Message
                            </div>
                            @if (!string.IsNullOrEmpty(Model.Result.ErrorDetails))
                            {
                                <div class="alert alert-warning">
                                    <strong>Détails techniques :</strong><br>
                                    <small class="text-monospace text-break">@Model.Result.ErrorDetails</small>
                                </div>
                            }

                            <a asp-page="Index" class="btn btn-outline-primary py-2 px-4">
                                <i class="fas fa-redo me-1"></i>
                                Réessayer
                            </a>
                        </div>
                    </div>
                }
            </div>
        }

    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Drag & Drop
        const fileDropArea = document.getElementById('fileDropArea');
        const fileInput = document.getElementById('fileInput');
        const fileInfoDisplay = document.getElementById('fileInfoDisplay');
        const multiSigCheck = document.getElementById('multiSigCheck');
        const signersGroup = document.getElementById('signersGroup');

        // Multi-signature toggle
        multiSigCheck.addEventListener('change', function () {
            signersGroup.style.display = this.checked ? 'block' : 'none';
        });

        // Drag & Drop handlers
        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            fileDropArea.addEventListener(eventName, preventDefaults, false);
        });

        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }

        ['dragenter', 'dragover'].forEach(eventName => {
            fileDropArea.addEventListener(eventName, () => {
                fileDropArea.classList.add('dragover');
            });
        });

        ['dragleave', 'drop'].forEach(eventName => {
            fileDropArea.addEventListener(eventName, () => {
                fileDropArea.classList.remove('dragover');
            });
        });

        fileDropArea.addEventListener('drop', handleDrop);
        fileInput.addEventListener('change', handleFileSelect);

        function handleDrop(e) {
            const files = e.dataTransfer.files;
            if (files.length > 0) {
                fileInput.files = files;
                displayFileInfo(files[0]);
            }
        }

        function handleFileSelect(e) {
            if (e.target.files.length > 0) {
                displayFileInfo(e.target.files[0]);
            }
        }

        function displayFileInfo(file) {
            document.getElementById('fileName').textContent = file.name;
            document.getElementById('fileSize').textContent = formatFileSize(file.size);

            const ext = file.name.substring(file.name.lastIndexOf('.')).toLowerCase();
            const typeIcon = getFileIcon(ext);
            document.getElementById('fileIcon').className = typeIcon;
            document.getElementById('fileType').textContent = getFileTypeDescription(ext);

            fileInfoDisplay.style.display = 'block';
            fileDropArea.classList.add('file-selected');
        }

        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }

        function getFileIcon(ext) {
            const icons = {
                '.pdf': 'fas fa-file-pdf fa-3x text-danger',
                '.doc': 'fas fa-file-word fa-3x text-primary',
                '.docx': 'fas fa-file-word fa-3x text-primary',
                '.xls': 'fas fa-file-excel fa-3x text-success',
                '.xlsx': 'fas fa-file-excel fa-3x text-success',
                '.ppt': 'fas fa-file-powerpoint fa-3x text-warning',
                '.pptx': 'fas fa-file-powerpoint fa-3x text-warning',
                '.jpg': 'fas fa-file-image fa-3x text-info',
                '.jpeg': 'fas fa-file-image fa-3x text-info',
                '.png': 'fas fa-file-image fa-3x text-info',
                '.bmp': 'fas fa-file-image fa-3x text-info',
                '.gif': 'fas fa-file-image fa-3x text-info',
                '.svg': 'fas fa-file-image fa-3x text-info',
                '.txt': 'fas fa-file-text fa-3x text-secondary',
                '.csv': 'fas fa-file-csv fa-3x text-success',
                '.json': 'fas fa-file-code fa-3x text-dark',
                '.xml': 'fas fa-file-code fa-3x text-dark',
                '.md': 'fas fa-file-alt fa-3x text-secondary',
                '.html': 'fas fa-file-code fa-3x text-danger',
                '.rtf': 'fas fa-file-text fa-3x text-secondary',
                '.eml': 'fas fa-envelope fa-3x text-warning',
                '.odt': 'fas fa-file-word fa-3x text-primary',
                '.ods': 'fas fa-file-excel fa-3x text-success',
                '.odp': 'fas fa-file-powerpoint fa-3x text-warning'
            };
            return icons[ext] || 'fas fa-file fa-3x text-secondary';
        }

        function getFileTypeDescription(ext) {
            const descriptions = {
                '.pdf': 'PDF',
                '.doc': 'Word',
                '.docx': 'Word',
                '.xls': 'Excel',
                '.xlsx': 'Excel',
                '.ppt': 'PowerPoint',
                '.pptx': 'PowerPoint',
                '.jpg': 'Image JPG',
                '.jpeg': 'Image JPEG',
                '.png': 'Image PNG',
                '.bmp': 'Image BMP',
                '.gif': 'Image GIF',
                '.svg': 'Image SVG',
                '.tiff': 'Image TIFF',
                '.txt': 'Texte',
                '.csv': 'CSV',
                '.json': 'JSON',
                '.xml': 'XML',
                '.md': 'Markdown',
                '.markdown': 'Markdown',
                '.html': 'HTML',
                '.htm': 'HTML',
                '.rtf': 'RTF',
                '.eml': 'Email',
                '.msg': 'Outlook',
                '.odt': 'OpenDocument Text',
                '.ods': 'OpenDocument Calc',
                '.odp': 'OpenDocument Impress'
            };
            return descriptions[ext] || 'Fichier';
        }

        function resetFileSelection() {
            fileInput.value = '';
            fileInfoDisplay.style.display = 'none';
            fileDropArea.classList.remove('file-selected');
        }
    </script>
}

@functions {
    private string FormatFileSize(long bytes)
    {
        if (bytes == 0) return "0 Bytes";
        long k = 1024;
        string[] sizes = { "Bytes", "KB", "MB", "GB" };
        int i = (int)Math.Floor(Math.Log(bytes) / Math.Log(k));
        return Math.Round(bytes / (double)Math.Pow(k, i), 2) + " " + sizes[i];
    }
}